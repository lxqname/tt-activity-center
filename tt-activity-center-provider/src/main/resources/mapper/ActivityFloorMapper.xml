<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.activity.mapper.ActivityFloorMapper">
    <resultMap type="com.deepexi.activity.domain.dto.ActivityFloorDto" id="ActivityFloorDtoResult">
        <result property="id" column="id" />
        <result property="activityId" column="activity_id" />
        <result property="name" column="name" />
        <result property="imgUrl" column="img_url" />
        <result property="type" column="type" />
        <result property="typeParam" column="type_param" />
        <result property="sort" column="sort" />
        <result property="tenantCode" column="tenant_code" />
        <result property="createdAt" column="created_at" />
        <result property="createdBy" column="created_by" />
        <result property="updatedAt" column="updated_at" />
        <result property="updatedBy" column="updated_by" />
        <result property="version" column="version" />
        <result property="dr" column="dr" />
    </resultMap>
    <sql id="Base_Column_List">
      id,      activity_id,      name,      img_url,      type,      type_param,      sort,      tenant_code,      created_at,      created_by,      updated_at,      updated_by,      version,      dr    </sql>
    <select id="findList" resultType="com.deepexi.activity.domain.eo.ActivityFloor">
        SELECT <include refid="Base_Column_List"/> FROM ac_activity_floor WHERE dr=0
    </select>
    <insert id="batchInsert">
        INSERT INTO ac_activity_floor
        (        id,        activity_id,        name,        img_url,        type,        type_param,        sort,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.activityId},            #{value.name},            #{value.imgUrl},            #{value.type},            #{value.typeParam},            #{value.sort},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO ac_activity_floor
        (        id,        activity_id,        name,        img_url,        type,        type_param,        sort,        tenant_code,        created_at,        created_by,        updated_at,        updated_by,        version,        dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            (            #{value.id},            #{value.activityId},            #{value.name},            #{value.imgUrl},            #{value.type},            #{value.typeParam},            #{value.sort},            #{value.tenantCode},            #{value.createdAt},            #{value.createdBy},            #{value.updatedAt},            #{value.updatedBy},            #{value.version},            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
            id=values(id),            activity_id=values(activity_id),            name=values(name),            img_url=values(img_url),            type=values(type),            type_param=values(type_param),            sort=values(sort),            tenant_code=values(tenant_code),            created_at=values(created_at),            created_by=values(created_by),            updated_at=values(updated_at),            updated_by=values(updated_by),            version=values(version),            dr=values(dr)    </update>
    <update id="deleteByIds">
        UPDATE ac_activity_floor set dr=1 where id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="countByActivityId" resultType="java.lang.Integer">
        SELECT count( 1 ) FROM ac_activity_floor
        WHERE dr = 0 AND tenant_code = #{tenantCode} AND activity_id = #{activityId}
    </select>
    
    <update id="deleteByActivityId">
        UPDATE ac_activity_floor SET dr = 1, updated_at = NOW(), updated_by = #{updatedBy}
        WHERE dr = 0 AND tenant_code = #{tenantCode} AND activity_id = #{activityId};
    </update>

    <select id="findByActivityId" resultType="com.deepexi.activity.domain.eo.ActivityFloor">
        SELECT <include refid="Base_Column_List"/> FROM ac_activity_floor
        WHERE dr = 0 AND tenant_code = #{tenantCode} AND activity_id = #{activityId}
        ORDER BY sort
    </select>



</mapper>